{
  "openapi": "3.0.0",
  "info": {
    "title": "CaSS",
    "version": "1.5.58"
  },
  "components": {
    "parameters": {
      "searchQuery": {
        "in": "query",
        "schema": {
          "type": "string"
        },
        "name": "q",
        "allowReserved": true,
        "description": "Query portion of Simple Query String per Elastic, see https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html#simple-query-string-syntax",
        "example": "name:* AND @type:Competency"
      },
      "uid": {
        "in": "path",
        "schema": {
          "type": "string"
        },
        "name": "uid",
        "required": true,
        "allowReserved": true,
        "description": "GUID, unique identifier, or MD5 of an object's @id.",
        "example": "ce-07c25f74-9119-11e8-b852-782bcb5df6ac"
      },
      "type": {
        "in": "path",
        "schema": {
          "type": "string"
        },
        "name": "type",
        "required": true,
        "allowReserved": true,
        "description": "Type of the object, with namespace, normalized",
        "example": "schema.cassproject.org.0.4.Framework"
      },
      "history": {
        "in": "query",
        "schema": {
          "type": "string"
        },
        "name": "history",
        "required": false,
        "description": "Fetches history of object. Will only return portions of the object's history that the user is allowed to see.",
        "example": false
      },
      "version": {
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "name": "version",
        "required": false,
        "description": "Version of the object. For CaSS-created data, the timestamp of the modification. For otherwise-registered data, increments from 1",
        "example": 1675901084853
      },
      "q": {
        "in": "query",
        "schema": {
          "type": "string"
        },
        "name": "q",
        "allowReserved": true,
        "description": "Query portion of Simple Query String per Elastic, see https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html#simple-query-string-syntax",
        "example": "name:* AND @type:Competency"
      },
      "start": {
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "name": "start",
        "description": "If doing paging, the number of results to ignore. Note that CaSS will not return beyond 10,000 results no matter the start parameter.",
        "example": 0
      },
      "size": {
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "name": "size",
        "description": "The number of results to return. Max 10000 without changes to Elastic.",
        "example": 10000
      },
      "index_hint": {
        "in": "query",
        "schema": {
          "type": "string"
        },
        "name": "index_hint",
        "allowReserved": true,
        "description": "Provides an index hinting string to accelerate typed search and avoid searching _all.",
        "example": "*competency,*encryptedvalue"
      }
    },
    "schemas": {
      "SignatureSheet": {
        "type": "array",
        "description": "Array of Signatures.",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "@type of the signature per JSON-LD Specification.",
              "example": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAodYG6jIBqwmshwMD9Ahy9c1on/m0/tVsSHpaefOlRScFV5LmOzisxv4dBHzM7cVElrYP148yIKmXJ/mRNE7tOv5RBoC+kPNoL+9hiw+UnlZEQgjWj7zib1jTVi5YeqHehHiY470YR1dL44QsTIg0hbynJeCq5dbkXK+TdEqL3m0EOjlAVGr8V7awWU29zb5UQuzV/bcSr4LddeJULQVmUxD8gRolR426CRvwuSmf2mS4UuGGSJQu5FmrDcIMmp3/DeEhzlrJLMi2PmjSJHsUJiQBs6eh6gmsFPGSOr8SUQM5pvuCgJMmurLb9mxIKIatbTUcm2JxIICPiRlNzXpMCwIDAQAB-----END PUBLIC KEY-----"
            },
            "context": {
              "type": "string",
              "description": "@context of the signature per JSON-LD Specification.",
              "example": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAodYG6jIBqwmshwMD9Ahy9c1on/m0/tVsSHpaefOlRScFV5LmOzisxv4dBHzM7cVElrYP148yIKmXJ/mRNE7tOv5RBoC+kPNoL+9hiw+UnlZEQgjWj7zib1jTVi5YeqHehHiY470YR1dL44QsTIg0hbynJeCq5dbkXK+TdEqL3m0EOjlAVGr8V7awWU29zb5UQuzV/bcSr4LddeJULQVmUxD8gRolR426CRvwuSmf2mS4UuGGSJQu5FmrDcIMmp3/DeEhzlrJLMi2PmjSJHsUJiQBs6eh6gmsFPGSOr8SUQM5pvuCgJMmurLb9mxIKIatbTUcm2JxIICPiRlNzXpMCwIDAQAB-----END PUBLIC KEY-----"
            },
            "expiry": {
              "type": "integer",
              "description": "Expiration date of this signature measured in milliseconds since the Unix Epoch.",
              "example": 1675901144907
            },
            "server": {
              "type": "string",
              "description": "PEM encoded public key of the entity who wants to perform this action. Used to validate @signature. Compared against the @owner or @reader field of objects that are having operations performed against them.",
              "example": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAodYG6jIBqwmshwMD9Ahy9c1on/m0/tVsSHpaefOlRScFV5LmOzisxv4dBHzM7cVElrYP148yIKmXJ/mRNE7tOv5RBoC+kPNoL+9hiw+UnlZEQgjWj7zib1jTVi5YeqHehHiY470YR1dL44QsTIg0hbynJeCq5dbkXK+TdEqL3m0EOjlAVGr8V7awWU29zb5UQuzV/bcSr4LddeJULQVmUxD8gRolR426CRvwuSmf2mS4UuGGSJQu5FmrDcIMmp3/DeEhzlrJLMi2PmjSJHsUJiQBs6eh6gmsFPGSOr8SUQM5pvuCgJMmurLb9mxIKIatbTUcm2JxIICPiRlNzXpMCwIDAQAB-----END PUBLIC KEY-----"
            },
            "@owner": {
              "type": "string",
              "description": "PEM encoded public key of the entity who wants to perform this action. Used to validate @signature. Compared against the @owner or @reader field of objects that are having operations performed against them.",
              "example": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAodYG6jIBqwmshwMD9Ahy9c1on/m0/tVsSHpaefOlRScFV5LmOzisxv4dBHzM7cVElrYP148yIKmXJ/mRNE7tOv5RBoC+kPNoL+9hiw+UnlZEQgjWj7zib1jTVi5YeqHehHiY470YR1dL44QsTIg0hbynJeCq5dbkXK+TdEqL3m0EOjlAVGr8V7awWU29zb5UQuzV/bcSr4LddeJULQVmUxD8gRolR426CRvwuSmf2mS4UuGGSJQu5FmrDcIMmp3/DeEhzlrJLMi2PmjSJHsUJiQBs6eh6gmsFPGSOr8SUQM5pvuCgJMmurLb9mxIKIatbTUcm2JxIICPiRlNzXpMCwIDAQAB-----END PUBLIC KEY-----"
            },
            "@signature": {
              "type": "string",
              "description": "Base64 encoded cryptographic signature of this object (minus @signature and @signatureSha256) by the private key holder identified by @owner.",
              "example": "JCZlDnSSRKII+bXChVzmCTLe7YPpw+6U+m/fEMR88flveU565QtwyVKY54HfbL5mDa3FtVuxHYTdExeNRj6Q16Tr9AYIAWVc3ckk4ROcWHDcgT73eOrxv238+oBMJAfUw6PvoC/fE68ToUCCcAXq6lhxx2yDzqRT4SZIeRcLQBFcEoHMLdP9lOepzJ5gqpaOkmwz2JKv1qjPbhf7tIA9w/AyW2Skx5Uoh4PoOqRH9YhZHcsKI5h5OKWX+X9y8tFVDm7TdV1ZBTS65Kk0uah91tHLQPuCJP8fWF4EP+7C/Cb7EifiGDSoZr3rG30dV1EQdyFdg9U+Pg0z+KMlAFAqDQ=="
            },
            "@signatureSha256": {
              "type": "string",
              "description": "Base64 encoded cryptographic signature of this object (minus @signature and minus @signatureSha256) by the private key holder identified by @owner.",
              "example": "JCZlDnSSRKII+bXChVzmCTLe7YPpw+6U+m/fEMR88flveU565QtwyVKY54HfbL5mDa3FtVuxHYTdExeNRj6Q16Tr9AYIAWVc3ckk4ROcWHDcgT73eOrxv238+oBMJAfUw6PvoC/fE68ToUCCcAXq6lhxx2yDzqRT4SZIeRcLQBFcEoHMLdP9lOepzJ5gqpaOkmwz2JKv1qjPbhf7tIA9w/AyW2Skx5Uoh4PoOqRH9YhZHcsKI5h5OKWX+X9y8tFVDm7TdV1ZBTS65Kk0uah91tHLQPuCJP8fWF4EP+7C/Cb7EifiGDSoZr3rG30dV1EQdyFdg9U+Pg0z+KMlAFAqDQ=="
            }
          }
        },
        "example": [
          {
            "type": "TimeLimitedSignature",
            "context": "https://schema.cassproject.org/kbac/0.4",
            "expiry": 1675901144907,
            "server": "http://localhost/api/data/schema.org.Person/5d1433859a739684cc88338f92cf59ad",
            "@owner": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAodYG6jIBqwmshwMD9Ahy9c1on/m0/tVsSHpaefOlRScFV5LmOzisxv4dBHzM7cVElrYP148yIKmXJ/mRNE7tOv5RBoC+kPNoL+9hiw+UnlZEQgjWj7zib1jTVi5YeqHehHiY470YR1dL44QsTIg0hbynJeCq5dbkXK+TdEqL3m0EOjlAVGr8V7awWU29zb5UQuzV/bcSr4LddeJULQVmUxD8gRolR426CRvwuSmf2mS4UuGGSJQu5FmrDcIMmp3/DeEhzlrJLMi2PmjSJHsUJiQBs6eh6gmsFPGSOr8SUQM5pvuCgJMmurLb9mxIKIatbTUcm2JxIICPiRlNzXpMCwIDAQAB-----END PUBLIC KEY-----",
            "@signature": "JCZlDnSSRKII+bXChVzmCTLe7YPpw+6U+m/fEMR88flveU565QtwyVKY54HfbL5mDa3FtVuxHYTdExeNRj6Q16Tr9AYIAWVc3ckk4ROcWHDcgT73eOrxv238+oBMJAfUw6PvoC/fE68ToUCCcAXq6lhxx2yDzqRT4SZIeRcLQBFcEoHMLdP9lOepzJ5gqpaOkmwz2JKv1qjPbhf7tIA9w/AyW2Skx5Uoh4PoOqRH9YhZHcsKI5h5OKWX+X9y8tFVDm7TdV1ZBTS65Kk0uah91tHLQPuCJP8fWF4EP+7C/Cb7EifiGDSoZr3rG30dV1EQdyFdg9U+Pg0z+KMlAFAqDQ=="
          }
        ]
      },
      "JsonLd": {
        "type": "object",
        "description": "Result",
        "example": {
          "@context": "<url>",
          "@id": "<url>",
          "@type": "<string>"
        }
      },
      "JsonLdHistory": {
        "type": "array",
        "description": "Array of historical results",
        "items": {
          "type": "object",
          "description": "Result",
          "example": {
            "@context": "<url>",
            "@id": "<url>",
            "@type": "<string>"
          }
        }
      },
      "JsonLdArray": {
        "type": "array",
        "description": "Array of results",
        "items": {
          "type": "object",
          "description": "Result",
          "example": {
            "@context": "<url>",
            "@id": "<url>",
            "@type": "<string>"
          }
        }
      },
      "SearchParams": {
        "type": "object",
        "properties": {
          "searchParams": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Query portion of Simple Query String per Elastic, see https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html#simple-query-string-syntax",
                "example": "name:* AND @type:Competency"
              },
              "start": {
                "type": "integer",
                "description": "If doing paging, the number of results to ignore. Note that CaSS will not return beyond 10,000 results no matter the start parameter.",
                "example": 0
              },
              "size": {
                "type": "integer",
                "description": "The number of results to return. Max 10000 without changes to Elastic.",
                "example": 10000
              },
              "sort": {
                "type": "string",
                "description": "Elastic sort JSON object. See https://www.elastic.co/guide/en/elasticsearch/reference/8.6/sort-search-results.html",
                "example": "[ { \"name.keyword\": {\"order\" : \"asc\" , \"unmapped_type\" : \"text\",  \"missing\" : \"_last\"}} ]"
              },
              "index_hint": {
                "type": "string",
                "description": "Provides an index hinting string to accelerate typed search and avoid searching _all.",
                "example": "*competency,*encryptedvalue"
              }
            },
            "required": [
              "q"
            ]
          }
        }
      },
      "MultiGetParams": {
        "type": "array",
        "description": "Array of partial identifiers",
        "items": {
          "type": "string",
          "description": "uid-like identifier prefixed with data/",
          "example": "data/0a8372fb9b073e5ebb7dc07e20fdfbea"
        }
      }
    }
  },
  "tags": [],
  "paths": {
    "/api/sky/id/salts": {
      "get": {
        "tags": [
          "Basic Keystore"
        ],
        "description": "Retrieves salt parameters from server for performing PBKDF2 hashing of usernames and passwords.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Parameters for hashing credentials.",
                  "properties": {
                    "usernameSalt": {
                      "type": "string",
                      "description": "Salt for the username."
                    },
                    "usernameIterations": {
                      "type": "integer",
                      "description": "Number of PBKDF2 iterations to perform on the username."
                    },
                    "usernameLength": {
                      "type": "integer",
                      "description": "Size of PBKDF2 hash for the username."
                    },
                    "passwordSalt": {
                      "type": "string",
                      "description": "Salt for the password."
                    },
                    "passwordIterations": {
                      "type": "integer",
                      "description": "Number of PBKDF2 iterations to perform on the password."
                    },
                    "passwordLength": {
                      "type": "integer",
                      "description": "Size of PBKDF2 hash for the password."
                    },
                    "secretSalt": {
                      "type": "string",
                      "description": "Salt for the secret used to encrypt the keystore."
                    },
                    "secretIterations": {
                      "type": "integer",
                      "description": "Number of PBKDF2 iterations to perform on the secret."
                    },
                    "secretLength": {
                      "type": "integer",
                      "description": "Size of PBKDF2 hash for the secret."
                    }
                  },
                  "example": {
                    "usernameSalt": "CLXTsjSZsHKxPZvovczkuxkObTHiLoNwgjwGifrIKylkrrZDboaOIgeDRrrYNgTRMysXYLMDOdCWSNUizoGUhrImmtOaOHxUfKnUOMcVsphRvBNpHPPDcGrLnQwvkQNceGycBDogZSBdSZoYkbJdfwamSgMSuCgHdPwtvVVaWScPGlcCHobadsywRyZEzmItYkiIqXpTVAQXlIbwEFCaCoqDMcgjWZRHxtgsKVZIgpHodlrMHYVPXzPdnymHLlLdYfddznJGDbUBSzmuurzuQQnLEiVZSQvGbZblwSETZApdBqwOKTtlnnbsQPfzpmatlgeNCBqiKnBcfwcRicINNIMUSDDjmMsaxmsOApQucbUBckYqVnwkMtPaQmkiCTFcatQEZyJtMbsENHnPHCfCnPOTTtZGJPwyNxPvcmErNDtDSHZWrHoQAFKHivrzCOdqKwLDgwMJOGQegAKyQJLFJVEKlqbHvuEvQzeAOBgcaDPMtNqCBpjoUOjoOMbXnivVsiUDlWBBenINvguHxorHzAacOHYAmmCZTVXzDXTmdhoGpmJWCKEYBKHsiXYMYvHacsqiuGgyhCzJRQulbGfofVFOpjCYBvMeEsHmyKhsJeYTXJImVhDtPntOsfClPWnPDjGMLSgBddiOceuKNeGBAIduNRYLpRrpvfsKGSYjCUgOWJIyJHqgtRErYCtCKNLwmhnUGfjQJsxNImhKHZspJfngYCrSeOkyMdUrVVmplleHAOYytWhbLTvMhyMyyBwFdHvCwAZAZsSIoLdwsGfsIUJPesmAcSWKOnzFNoDCnwLULZJyBdcYBqVhfrFbmXSvhzdSVsnpJymvwMGotSFUZWCzaQJlwAvQgsVZrOUFfezzMroCHoFCPjBFfyjWySrAJRUmKGnWeBrKfKuHuZYyKVkvZEiYbcjrMfwzTGYWIVWbaNeHmfDXPxHGzzreygnybJTuPUqkOPeEPMfEssieVPIWcsdLOfBEyXSFrxOPkrHhIKpcpooBDlcFgohfuNYVfXmOjXNXxysvWlapwpdDMuFhCWNUiIYCZvYtoOGmbzqdbBwWqSnnVDxUwGtqkTovAwYhIlYFalOVTkAcDgXHqkUMfFcrNdoaThDSvCFFoIIdJIsQpEFpwFxkvcYNKhABwPQWzNtcBGqeZYFKwkvzPDcHkpkTnYvxdwxEGGFderbDuVRdkZguyzenGwGgCTvphcnWorwPPjOQEDvPWpZGTDLvEYtnUUEgrJXJwmODykoAgeWwZrjXJUpHHxjTMvmNEEEJdRIuMtmOWKfukpfwnfNRqhMkbLkXUvVkacGRVGTvEXFAIGqbYCytGfjHeNmWpMPxPpFvXeIzOqZmibaNISiPOTTvDHwHmqGNIHSWpHSwIOGnhHLrAJsvOiUnNxfqWhjOPWRyoIOoPeZHxOUptngvhSqABLIhphyasYBjYbPMzoHZtViJneHftoMOlJBUOQnbogYnIThRIUECXwPhicyWSNcDBsZfQRpELwYlJjtFsghTRKDdyDymMstWRkhHkKqNUSIzpWJiatUZopinRmkQmUzGmNnWyUwGaqpAGmSurYZYwBBdGyqcLiHJnRHamcWrHriWZyEETQgHpkqblGYhtDAIWcCnMaoqgOwNUZabjXtJEhlZZIHiOmCJAceXacVtyuhWPfVmrofogYXmiPflIJvGzGfyzyjsIycAdwMBqhsmmFAkHdOgtXrOvSEunMpojAXQUSyhTblMGYHbcdGaolzWRnziZIdXPTHdgnzyWgpOoIQMVEawDzVChVLlSBwIARSaiIZfycABtauwOgIFmKwuAfwiRHpQvuAdxrPBvwAOgrNQULZYXsWMlxBsnjuzekMZkXVnccEMlXbvNuCRTktsGevDBEOkasKWuLMxScddJuDLxwrdHSirzoaIeTCWWBZMkceeyXIdneOpyBnInuXDuBfJsnVsNAcUMIZCcwWRRufWMPbyuEHZhPkbCiYVXXcrGmHTGueSpPooTDYmSYKlgeyceDgcwXMxJEOMbCvIxDsBJtzsxaefkcDo",
                    "usernameIterations": 5000,
                    "usernameLength": 64,
                    "passwordSalt": "IWlyUNiAqFvMrQzQoZJyNqfAqoMFwVbceBOOnAEPGsGwKpAnDhohpznHpGVHFyUPWPnKMBcIMvbApDoKsjJbsxqcaDJnyPALYRhEkoiwagEDBghadQObuvqPayYxlERuhxjXrWijDKidBeyNYnhqaftMRmJnbaSkvGOEiWKPJNegCodzfQYrNtwGRfyRRlvBjUSJtJQmIAwzvsbKgcVfBrosgjofVcFtmnPCmIMCnuUoQbkgNtdJdbtXWIeWcJkZdZRHYFRecLNHQDZqEpnZJZMsaUxLdMAYmktPJFBGpRNpFePoDYYqqbsyCFLElXoYVaZRinfawKwoCFYdQrnbpKdtzWfzANeRcfJiuPiPPFcZWkBdEqhIQFXtZkxsHBkLxCWASNbTjNAwvgLYCWxfLunLpVHNsFBiFlvxxhCghwlOxAQBqVmmdzMmFAcaSbxUdFBKtyecuGWaHXdiNTkCQlBuAysQNHOqqtLCBarWKjMgGJBeRyBNUXgbPWZyQkDLlcVlVsnYQxVkXjzWGyPByKjzyTavADBVtfRQZHyUnwmfBrRxGzuBVpYKBJXVnqZrbHYgeDFgRTZCYEAGHBtGfCLttUPMXviNUbWGqJLVZxqsBBONKKuAXscfpnQLOQJUJaSNVujbFWcxtiOKZQarIRqbLvvxdERzRTNVJjEOblkFhSmYFdIsJacYkaFwOiDcBGXkQofNUfndlhCpEheBEtOFNsvjSrsuaczCThVYYrjhipYUoRCnZgcBRDgscYdUzTXQeRCXiQiWEZiCHovxUMHyFKSXWkRbFaUZQwptPJGTCtbmmZXIeietVUpWkwBDJAmNWQJoDXdwxREPedkNDsbfhzlPCGeJluJKhPJfvMxLXCUDzOWDVDEbhmOSgQSHmibvyjnxWPGkpftyCNzZisOKEsykWtfTMyGHDykeKLjmPLqNzHLHKQuyRKwahASkaQLWkzcLoDqpeSjDzJOdLKtHWxXDACKTaFwoAATcxbsBIqZEJSgmzYmErjoyQzrptScNBXSwNyxBjWOlaFsqrFYvzcbnLGRhIpVhzxybSMgptkujdugoBDrHCteChoFzTbwDMZCwpGFdxTaJcSYyFetNtVXGHtMWNiqKjicRdGLPykTcEzQttKMUuqMlsEwPkYFrEiagucMwLXSrKLmGjXDaAVxxtyRkIYwBYzxDIhuVIhhajGwNTzxZWqVJfHBmEIboGhjXqngwngsfUZgoJmlMhaIYItqgjeBIQiqjIxBBVOnPocsQGdUyLCUSroIqWZWvsQBXWJpLQfLekyzpqSfioIMTRwDiwAVHsoETaTCiTUFxRLddZhVRsxmQqYZAnLpykkehTiJPFqJXcyGzoTlIOxLpMpLxWTUEuuyHbxVWxiyVOVkIiwLbbQHvLLLqKYuyxyShtBaXNThbZOHAPnlonxESVBfVbwnCRxyqCsMyIOxYZebvBhASZKBfYjYhYmJmqxYdVBPSwHdJukDvgkTPjUQdUxQizdTJpOUaPBHATVAovAYOPfRDaBahUdvYXwYQsgcHEQvxklaWSbqiAJIEpYoyrQJfVpAezHrewAqvbIXRxGbQWfJTwAsxFkGlfnMaFinEMBbcgtJWLEIFOYLMjBrzzgjPNlCUQMIobGDcUhyaYLTNlYYTiIfgeZjOcuPwWSPkrKINKGSUdhOymESajWNEJQgGvfQQoecDfPLUsuDaTNQZGfZDhrxAiXIdzQIWHIWqdSGdvKuHkbLTntAPxEPeRGYhBriYejXoGlKbEyGXDzPazUawUINGXifWMvhGVKXPoUdmjDqJkBwRJxrmZzEQxfwHlvxecUFyXjbdwtROUVtXTOgQyfHLXSBnoxOuSmJfZLXUvUJbTYLNUKFEdlPCFmYKwZDtHCCBvmlMWBqnLMngFmXAzXtLzoUVICUvXLzJvgDXXEjunHQysPonnUYbzNmEYpTbApFJlEXQUWZfVANXQNwNHpvNKrKKELBEElodxRaKFLgbhRoGXJYuYKgvroGPaMMQVOvTcIUKOxfrrVsbTUYIhCyKEbuX",
                    "passwordIterations": 5000,
                    "passwordLength": 64,
                    "secretSalt": "qsDFcyzRIDKmjHUsFterKfYOuSlrbpnEfpFzOZrvAArQoYqPpyHBYJSQOUudZttyQjBvBvfeqWVZVVYSTDFbdElTaKjUYFaXJGsqJRFtGXgKrseOjwtRcLqJutNHCeCcFtQmFDjaQZkLZOYhylCgdvsOhFRHkRVfbztDSIjgtwJxBuPtONUWOIZITRRsovqxRWADNhnqqMXZemeXKGDrmJhRVZYCRApAOnFEiIrRFfzoLteBWMKyKHVejxcTbkaxOLXiUcXnDFtmQaGFCEhqgmaaKStDByJrxxZjGAhaiQEwxDAfXrXlBSdkQHECWvyORBoaoougcyzJOzYDMWJfrMEvMnJFFSRbXKwiUMxTqeGNxKYNgqUFrcqJRmpYcdzIbyuveboqwhJVASisPywHzFHwdSEBUMmLBnuvQOuAKiQiLwlBpIviuxygTPkUjqTqxDUvUHqjCTERAWOHWZDljBFZApFgSzEQocrpRAvpxVujUxqslfegqsKcdNcPCvswSKJRlfPLUtmhoSCmHQFEfBDpKSqJCPrWmBKkejlUGyLsUUMyjJcrXDHUIpOSIhllghVMuEAviMVvlunYHmZPvTQjEsJUeNiymTYAqyrlhEktqRPAzffMWySzXZBwSXHqlAbZLuOOmBMBmDSTTFATqfohUGEWimVZArGiYXdEYnQXySFYUUjAHVniMihhrSRUMshKtyAwIolKkGqadjRkDcBtKHWwFAnqhQhEdFYaTfhVszKIIoSTOrmFxyfnhxyDVblnvzgbjuFyubPgIqEbtssMsvBXpIbcFQAmRRxSIboHMnvrcOQooidwaUJngxJZcpXpqJDlLOylgXZBRpIcDtilaZfcJhoZLYNdiWiOaawgchyAQGVMUTwkvKMTzhFMGrNlyAsnRmNGfQmiBwWpVRBDGaTJrkQHjdSDbeDKbpsuXCwHjrfXfzwUNAwxOwRWjgskheaWRALlDkxcWCGMLImgAHzPVaJPDYtleVWTOPVfpWLzTGyNJbgTfLchspXGwEKLzGGDHqUuHYiRWYqkuGjxkIBPfAgypKPdIxnrnGYxjiDlICogjEvAidElWQAuhXBYeCqAWoiOYjZpLzzWMMyMEUcbOagujvjgLevxsBCkUffrmPtHwNIzGdnLeidonTOVvWmlyxLWGFIQjWCBKQqVtJbOpjuCsTcwRkyqVbiNWdQJpwNFAJhBPEXqieeprulpQZfiPrFjIMBsYFLzJwHZDAuoIcSHUYZeOzSukMxBBraZEiDUPabIzoNyuZezZtsGeeGsCvijeoaAYQInGxCMVtBoXVJgJlbGyfOTxCfDdKrroadbXyvVEgyORqBSbFUktpFsgbBXSjHyqVTgZdmcdrmvrZOiZnnHWFKrNYUxmtTjCkhKsNqLCVDdUFrtrltBnnSoAALpVEEDTinMpihzubQPcqLkytNptxvDLngtsCxqFOSllIIxTMlTpaxZUmEWiTLoXFBvItClOwGkbaQrHhxZxOUSexEiIZyKPpKezUqugzrcBYPrFaQveNnltCAaZffDrCemwhuwtagZnCaaqXqBWESBNaTWoalhxkHwuDcYNQvpyaxESYvGjkgWYxXCZhwVMWqgbjCTokQxAEEemNaTarUSlKjLtKpHzoWQEieujbaKgGpsPIOhrnuGFcyJQpKFWsAKoBenqshqUkIRCXeyPUCIcPILMFijlyLMlnkvbGjhllwhGwtRexvhKUsoBBUzqPnWSxgzeOUNBKVkiAcjxcDDNIUhRnBdTYkOMVbgYThhRlSvHwsKuuyWuTIzDZfYCMXgAuwavoQpCLoprURsmUVTITCiMbvwCGFEmgebhOlTrDYEiIECXQSrtnMKRxuAucRUTctVtJyseJovflqoBtqHzBLblMEjSZOtDujUIeugoMExEvfoUZpMaKfECuVdsDxLErTtOQRLSOhAReSinPjkQWdyhEiZPNGYlHbxhPLTEOZlqnIDFrDZKlIdtTRjCBjsKSzJkanhCxOJHLLnxNKbeZnmDKbupUENarikMKYjUkoDUIKosSTV",
                    "secretIterations": 5000,
                    "secretLength": 64
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/data/": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "Searches for data in the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/q"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/size"
          },
          {
            "$ref": "#/components/parameters/index_hint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Search"
        ],
        "description": "Searches for data in the system.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/{uid}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "description": "Retrieves data from the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/uid"
          },
          {
            "$ref": "#/components/parameters/history"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonLd"
                    },
                    {
                      "$ref": "#/components/schemas/JsonLdHistory"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Failure to locate data due to permission or absence of data."
          }
        }
      },
      "post": {
        "tags": [
          "Repository"
        ],
        "description": "Puts data into the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/uid"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/JsonLd"
                  },
                  "signatureSheet": {
                    "$ref": "#/components/schemas/SignatureSheet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Failure to locate data due to permission or absence of data."
          }
        }
      }
    },
    "/api/data/{type}/{uid}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "description": "Searches for data in the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/uid"
          },
          {
            "$ref": "#/components/parameters/type"
          },
          {
            "$ref": "#/components/parameters/history"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonLd"
                    },
                    {
                      "$ref": "#/components/schemas/JsonLdHistory"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Failure to locate data due to permission or absence of data."
          }
        }
      }
    },
    "/api/data/{type}/{uid}/{version}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "description": "Searches for data in the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/type"
          },
          {
            "$ref": "#/components/parameters/uid"
          },
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/history"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonLd"
                    },
                    {
                      "$ref": "#/components/schemas/JsonLdHistory"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Failure to locate data due to permission or absence of data."
          }
        }
      }
    },
    "/api/sky/repo/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "deprecated": true,
        "description": "Searches for data in the system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/q"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/size"
          },
          {
            "$ref": "#/components/parameters/index_hint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Search"
        ],
        "deprecated": true,
        "description": "Searches for data in the system.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/sky/admin": {
      "get": {
        "tags": [
          "Infrastructure"
        ],
        "description": "Fetches public key of the admin user. An identity with the corresponding private key will have edit/delete capabilities over all data.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of admin public keys",
                  "example": [
                    "<public key>"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/ping": {
      "get": {
        "tags": [
          "Infrastructure"
        ],
        "description": "Fetches server parameters along with information about you, if SSO is enabled.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Ping response",
                  "additionalProperties": false,
                  "required": [
                    "ping",
                    "time",
                    "adminPublicKeys",
                    "postMaxSize"
                  ],
                  "properties": {
                    "ping": {
                      "type": "string",
                      "description": "Just a known value for ensuring the response isn't from something else.",
                      "example": "pong"
                    },
                    "time": {
                      "type": "integer",
                      "description": "The current number of milliseconds since the Unix epoch, for ensuring signature sheet signing can sign time-nonced signatures that will not be time-desynchronized with the server.",
                      "example": 1674857764808
                    },
                    "ssoPublicKey": {
                      "type": "string",
                      "description": "When logged in with SSO, the public key of the first key in the keyring.",
                      "example": "<public key>"
                    },
                    "ssoAdditionalPublicKeys": {
                      "type": "array",
                      "description": "When logged in with SSO, the public keys of keys past the first in the keyring.",
                      "example": [
                        "<public key>"
                      ]
                    },
                    "ssoLogin": {
                      "type": "string",
                      "description": "When logged in with OIDC (or similar), the URL of the login redirect page, using CASS_OIDC_BASE_URL environment variable for the endpoint.",
                      "example": "http://localhost/api/login"
                    },
                    "ssoLogout": {
                      "type": "string",
                      "description": "When logged in with OIDC (or similar), the URL of the logout redirect page, using CASS_OIDC_BASE_URL environment variable for the endpoint.",
                      "example": "http://localhost/api/logout"
                    },
                    "banner": {
                      "type": "object",
                      "required": [
                        "message",
                        "color",
                        "background"
                      ],
                      "description": "If specified in CASS_BANNER_MESSAGE, CASS_BANNER_TEXT_COLOR, CASS_BANNER_BACKGROUND_COLOR environment variables communicated from the server.",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Banner text as specified by CASS_BANNER_MESSAGE environment variable.",
                          "example": "<Security markings>"
                        },
                        "color": {
                          "type": "string",
                          "description": "CSS text color as specified by CASS_BANNER_TEXT_COLOR environment variable.",
                          "example": "red"
                        },
                        "background": {
                          "type": "string",
                          "description": "CSS background color as specified by CASS_BANNER_BACKGROUND_COLOR environment variable.",
                          "example": "yellow"
                        }
                      }
                    },
                    "motd": {
                      "type": "object",
                      "description": "If specified in MOTD_TITLE, MOTD_MESSAGE environment variables communicated from the server.",
                      "required": [
                        "message",
                        "color"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Message of the Day title as specified by MOTD_TITLE environment variable.",
                          "example": "Message of the Day"
                        },
                        "color": {
                          "type": "string",
                          "description": "Message of the Day text as specified by MOTD_MESSAGE environment variable.",
                          "example": "Have a good day!"
                        }
                      }
                    },
                    "adminPublicKeys": {
                      "type": "array",
                      "description": "Array of admin public keys",
                      "example": [
                        "<public key>"
                      ]
                    },
                    "corsOrigins": {
                      "type": "array",
                      "description": "For which origins should the cass client include credentials for in its requests.",
                      "example": [
                        "http://localhost"
                      ]
                    },
                    "postMaxSize": {
                      "type": "number",
                      "description": "Max size of fields and files in POST requests that this server can handle in bytes."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sky/repo/multiGet": {
      "post": {
        "tags": [
          "Repository"
        ],
        "description": "Fetches multiple pieces of data simultaneously. Note, testing this function does not work. See: https://stackoverflow.com/questions/68291244/how-to-format-a-json-array-in-the-request-body-of-a-multipart-form-data-request/68291856#68291856",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MultiGetParams"
                  },
                  "signatureSheet": {
                    "$ref": "#/components/schemas/SignatureSheet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/sky/repo/multiPut": {
      "post": {
        "tags": [
          "Repository"
        ],
        "description": "Stores multiple pieces of data simultaneously. Note, testing this function does not work. See: https://stackoverflow.com/questions/68291244/how-to-format-a-json-array-in-the-request-body-of-a-multipart-form-data-request/68291856#68291856",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/JsonLdArray"
                  },
                  "signatureSheet": {
                    "$ref": "#/components/schemas/SignatureSheet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns data that was saved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonLdArray"
                }
              }
            }
          }
        }
      }
    }
  }
}